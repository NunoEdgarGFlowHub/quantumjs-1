@inline ../templates/resources.um
@title QuantumJS

@div .header
  @img .logo: @attr src: /resources/logo.svg
  @div .title: QuantumJS
  @div .tagline: A node.js static site generator with a focus on extensibility and speed.
  @a .qm-button.get-started: Get Started
    @attr href: /docs/quick-start

# @div .color-band
#   @div .content
#     @div .install-link-stip
#       @div .spacer
#       @div .spacer.github-icon-container
#         @hyperlink [https://github.com/ocadotechnology/quantumjs]
#           @img .github-icon
#             @attr src: /resources/github-mark.svg

@div .content
  @h2: Converts markup to html
  @group
    @@codeblock um
      @div: Welcome to the site, sign in below
      @signIn

    @i .fa.fa-arrow-right
      @attr style: padding: 1em; # hack

    @@codeblock html
      <div>Welcome to the site, sign in below</div>
      <div class="sign-in">
        <input class="username-input" placeholder="Username"></input>
        <input class="password-input" placeholder="Password"></input>
        <button class="sign-in-button">Sign in</button>
      </div>

  @h2: Define your own ways to convert markup into html
  @@codeblock js
    const dom = require('quantum-dom')

    exports.signIn = function (selection) {
      return dom.create('div').class('sign-in')
        .add(dom.create('input').class('username-input'))
        .add(dom.create('input').class('password-input'))
        .add(dom.create('button').class('sign-in-button').text('Sign in'))
    }

  @h2: Features
  @list
    @item: Explicit, easy to learn markup language for building web pages
    @item: Built with customisability in mind
    @item: Uses node.js - full access to npm when writing custom transforms
    @item: Prebuilt transforms for writing technical documentation
    @item: Auto browser page refresh when files are changed
    @item: Fast - can build a 2000 page site in x seconds