@inline /templates/sidebar-page.um

@topSection
  @title Using the CLI / API
  @source [https://github.com/ocadotechnology/quantumjs/tree/master/docs/{{filename}}]: Edit Page
  @description
    This page explains how use the command line interface (CLI) and the API for
    creating documentation.

@contentSection
  @topic Configuring Quantum
    To use the CLI and API, you'll need a file called @code[quantum.config.js].

    This file contains the pipeline definition as well as config for which files
    to build.

    A basic example that provides the @code[html] elements (such as
    @code[<div>]) can be seen below:

    @example
      @noOutput
      @file quantum.config.js
        @@js
          const html = require('quantum-html')

          module.exports = {
            port: 9999,
            pipeline: [
              html.fileTransform()
            ],
            pages: '**/*.um'
          }

    @notice [More Information]
      More details of what options can be used in the config, as well as a
      full-featured example can be found on the
      @hyperlink({{baseurl}}/docs/quantum-config/)[quantum.config.js] page.

  @topic Using the config with the CLI
    If your config file is called @code[quantum.config.js], you can just run this
    in the same directory as the config file:

    @example
      @noOutput
      @@console
        # Build the site once
        quantum build

        # OR

        # Build the site and watch for changes
        quantum watch


    If the config file has a different name the @code[--config] option can be
    used when building a quantum site:

    @example
      @noOutput
      @@console
        quantum --config="quantum.config.production.js" build

        # OR

        quantum --config="quantum.config.production.js" watch

  @topic Using the config with the API
    To use the config with the quantum api, you can @code[require] the config
    file in your script:

    @example
      @noOutput
      @@js
        const config = require('./quantum.config.js')
        const quantum = require('quantum-js')

        // Build the site once
        quantum.api.build(config)

        // OR

        // Build the site and watch for changes
        quantum.api.watch(config)

