@method select
  @description
    Selects a child entity from the selected entity.

  @extra
    @subsection Example
      @@codeblock js
        const quantum = require('quantum-js')

        const entity = {
          type: 'parent',
          params: [],
          content: [
            {
              type: 'childExample',
              params: [],
              content: []
            }
          ]
        }

        const selection = quantum.select(entity)
        selection.select('childExample') // returns a new selection wrapping the 'childExample' entity

  @param type [String]
    @description
      The type of entity to select
  @param? options [Object]
    @property recursive [Boolean]
      @description
        Set to true to search recursively down the child entities to search
        for this type. It will do a depth first search.
      @default: @code[false]
    @property required [Boolean]
      @description
        Set to true to throw an error when this type is not found
      @default: @code[false]

  @returns Selection
    @description
      Returns a new selection that wraps the first entity of type @code[type]
      that was found. If there was no entity of type @code[type] found, a
      @type[Selection] will still be returned, but will contain an empty entity
      that looks like this

      @@codeblock js
        {
          type: '',
          params: [],
          content: []
        }
