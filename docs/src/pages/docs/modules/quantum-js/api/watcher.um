@function watcher
  @added 2.0.0

  @description
    Creates a new @type[Watcher] instance that watches files for changes.

  @param specs [String/Object/Array]
    @description
      This describes the files to watch.

      It can be a single file:
      @@codeblock js
        quantum.watcher("src/file.um", options)

      Or a glob:
      @@codeblock js
        quantum.watcher("src/**/*.um", options)

      Or an array of globs:
      @@codeblock js
        quantum.watcher(["src/**/*.um", "src2/**/index.um"], options)

      Or an array of globs:
      @@codeblock js
        quantum.watcher(["src/**/*.um", "src2/**/index.um"], options)

      Or a more structured object:
      @@codeblock js
        quantum.watcher({
          files: 'src/**/*.um',
          base: 'src'
        }, options)

      Or an array of these objects:
      @@codeblock js
        quantum.watcher([
          {
            files: 'src/**/*.um',
            base: 'src'
          },
          {
            files: 'src2/**/index.um',
            base: 'src2'
          }
        ], options)

  @param? options [Object]
    @property dir [String]
      @description
        The working directory for the watcher to work in
      @default: @code['.'] (The current working directory)

    @property dest [String]
      @description
        The default destination directory to write the files to
      @default: @code['target']

  @returns Watcher

@prototype Watcher
  @extends EventEmitter

  @added 2.0.0

  @description
    An instance of one of these is returned by @code[quantum.watcher]. It
    provides a way to stop watching the files. Do not create one of these directly;
    instead use the @code[quantum.watcher] function.

  @event add [FileInfo]
    @description
      Emitted when a new file is added / starts being watched. The data with the
      event is a @type[FileInfo] instance with information about the file being
      watched.

  @event change [FileInfo]
    @description
      Emitted when a file is changed. The data with the event is a
      @type[FileInfo] instance with information about the file that was changed.

  @event remove [FileInfo]
    @description
      Emitted when a file is removed. The data with the event is a
      @type[FileInfo] instance with information about the file that was removed.

  @method stop
    @description
      Stops watching the files

  @method files
    @description
      Gets a list of the watched files
    @returns [Array[String]]
      @description
        All the files currently being watched by this @type[Watcher]
