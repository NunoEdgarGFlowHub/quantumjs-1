@function readAsFile
  @added 2.0.0

  @description
    Reads and parses the contents of a file

  @extra
    @subsection [Example 1: Read using filename]
      @@codeblock js
        const quantum = require('quantum-js')

        quantum.readAsFile('some/file.um').then(file => {
          console.log(file)
        })

  @extra
    @subsection [Example 2: Read using FileInfo]
      @@codeblock js
        const quantum = require('quantum-js')

        const info = new quantum.FileInfo({
          src: "src/content/about.um",
          resolved: "about.um",
          base: "src/content",
          dest: "target/about.um",
          destBase: "target",
          watch: true
        })

        quantum.readAsFile(info).then(file => {
          console.log(file)
        })

  @param file [String/FileInfo]
    @description
      The filename string or @type[FileInfo] to load. If a @type[FileInfo] is
      passed in, the returned @type[File] instance will use the @type[FileInfo]
      for its @code[info] property.

  @param? options [Object]

    @property inlineEntityType [String]
      @description
        The entity type to use for inlining other files.
      @default: @code["inline"]

    @property inline [Boolean]
      @description
        When inline mode is on, the inlineEntityType (@code(um)[@inline] by
        default) will be replaced with the content of the specified files.
      @default: @code[true]

    @property loader [Function]
      @description
        A function for loading a file from disk, returning a @type[Promise] that
        contains the contents of the file as a string that can be passed to the
        parser.
      @param filename [String]: The file/resource to load.
      @returns [Promise[String]]
        A promise that yields the contents of the file as a string.

    @property base [String]
      @description
        The base of the glob path that should be ignored when writing to the
        target.
    @property resolveRoot [String]
      @description
        The path to resolve absolute files from.
      @default: @code['.'] (The current working directory)

  @returns [Promise[File]]
    @description
      A promise that yields the parsed AST wrapped up into a @type[File].
