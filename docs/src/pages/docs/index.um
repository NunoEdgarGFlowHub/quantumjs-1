@inline /templates/sidebar-page.um

@topSection
  @title Overview
  @source [https://github.com/ocadotechnology/quantumjs/tree/master/docs/{{filename}}]: Edit Page
  @description
    A node.js static site generator with a focus on extensibility and speed

@contentSection
  @topic What is QuantumJS?
    QuantumJS is a @italic[static site generator] - a tool for converting
    @bold[human readable markup] into @bold[HTML].

    Websites built with QuantumJS can be deployed to anywhere that can host static
    files (Firebase Hosting, Amazon S3, Google Cloud Storage, etc).

    QuantumJS comes with a @hyperlink(/docs/cli-and-api/)[CLI] (command line
    interface) and @hyperlink(/docs/cli-and-api/)[API] for building sites.

  @topic Features
    QuantumJS comes preloaded with some modules for writing beautiful
    @hyperlink(/docs/modules/quantum-api/)[API docs], drawing simple
    @hyperlink(/docs/modules/quantum-diagram/)[diagrams], and comes with various
    utilities to help with @hyperlink(/docs/modules/quantum-docs/)[writing documentation]. It
    also has support for @hyperlink(/docs/modules/quantum-version/)[versioned content],
    @hyperlink(/docs/modules/quantum-template/)[templates] and
    @hyperlink(/docs/modules/quantum-code-highlight/)[code highlighting]. All of this
    is supported through a simple @hyperlink(/docs/markup/)[Markup Language].

    QuantumJS has its own markup language, but it also has support for
    @hyperlink(/docs/modules/quantum-markdown/)[Markdown], for when only basic
    formatting options are needed, or for working with existing Markdown-based
    sites.

    @subsection Other Features
      @list
        @item: Explicit, easy to learn markup language for building web pages
        @item: Built with customisability / extensibility in mind
        @item: Uses node.js - full access to npm when writing custom transforms
        @item: Prebuilt transforms for writing technical documentation
        @item: Auto browser page refresh when files are changed
        @item: Fast - builds this site in ~2 seconds

  @topic Example

    Suppose we have this very simple page (written using @hyperlink(/docs/markup/)[Quantum's markup])

    @subsection sign-in.um
      @@codeblock um
        @div: Welcome to the site, please sign in below
        @signIn

    Building this page with quantum, would produce the following


    @subsection sign-in.html
      @@codeblock html
        <div>Welcome to the site, please sign in below</div>
        <div class="sign-in">
          <input class="username-input" placeholder="Username"></input>
          <input class="password-input" placeholder="Password"></input>
          <button class="sign-in-button">Sign in</button>
        </div>


    The above conversion actually made use of this custom transform, that we defined
    just for our site.

    @@codeblock js
      const dom = require('quantum-dom')

      exports.signIn = (selection) => {
        return dom.create('div').class('sign-in')
          .add(dom.create('input').class('username-input'))
          .add(dom.create('input').class('password-input'))
          .add(dom.create('button').class('sign-in-button').text('Sign in'))
      }

  @notice [What's Next?]
    Head to the @hyperlink({{baseurl}}/docs/quick-start/)[Quick Start] page to get started
    with QuantumJS.
