@inline ../../templates/sidebar-page.um

@topSection
  @title Quick Start
  @source [https://github.com/ocadotechnology/quantumjs/tree/master/docs/{{filename}}]: Edit Page
  @description
    This page will guide you through creating your first page

@contentSection

  @topic Introduction
    This page will guide you through setting up your first site built with
    QuantumJS. At the end you will have written some quantum markup and will
    have compiled it into a HTML page that can be viewed in the browser.

  @topic Install quantum
    The first step is to install quantum globally. Here is the command for doing
    that:

    @codeblock bash
      npm install -g quantum-js

  @topic Initialise the project
    Next we are going to set up the project and install the dependencies we need.

    Create a new directory for our example project to live in, and cd into it:

    @@codeblock bash
      mkdir example-quantum-site
      cd example-quantum-site

    Initialise an npm project with:

    @codeblock bash
      npm init

    Then install some of the quantum modules we are going to use:

    @codeblock bash
      npm install --save-dev quantum-html quantum-docs

  @topic Create a config file
    Next we'll create a config file for building our project. Create a file called
    @bold[quantum.config.js] and copy the following into it:

    @@codeblock js
      const html = require('quantum-html')
      const docs = require('quantum-docs')

      /*
        Define the set of entity transforms - these transform
        individual entries in the page to virtual dom.
      */
      const htmlTransforms = {
        html: html.transforms(),
        docs: docs.transforms()
      }

      /*
        Define the pipeline - this transforms an entire page from
        quantum ast to HTML.
      */
      function pipeline (page) {
        return Promise.resolve(page)
          .then(html({ transforms: htmlTransforms }))
          .then(html.stringify())
      }

      /* Export the pipeline, the pages we want to transform */
      module.exports = {
        pipeline: pipeline,
        pages: '*.um'
      }






  @topic Create an example page
    Create a file called index.um and copy this into it:

    @subsection index.um
      @@codeblock um
        @topSection
          @title My First Page
          @description: My first page built with Quantum

        @contentSection
          @topic Information
            Page Content can go inside topics

            @sectin Sub-information
              It can also go inside sections inside topics

            @codeblock js
              // Example Codeblock
              const length = 5
              for (let i = 0; i < length; i++) {
                console.log(i)
              }


  @topic Build the site
    Run this command in the terminal to build the site

    @@codeblock bash
      quantum build

    Check the @code['target'] directory for the output. There should be a file
    called index.html in there - open it up in a browser to see what has been generated.

  @topic Watching for changes
    Run this command to build the site, and then rebuild when there are changes.

    @@codeblock bash
      quantum watch

    The watch command also starts up a web browser with live reload enabled so
    whenever you save, your browser will update to show the changes.

    After running @code(bash)[quantum watch], open @hyperlink(http://localhost:8080)[http://localhost:8080]
    in your browser and then change something in index.um.

  @notice [What Next?]
    Read more about quantum and how it works here:
    @list
      @item: @hyperlink(/docs/core-concepts)[Core Concepts]

    And for some more interesting examples, check out these tutorials:
    @list
      @item: @hyperlink(/tutorials/writing-technical-documentation)[Writing Technical Documentation]
      @item: @hyperlink(/tutorials/setting-up-a-blog)[Setting up a Blog]


@footer
