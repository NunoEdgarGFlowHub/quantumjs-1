# this.info = options.info
# this.content = options.content || []
# this.meta = options.meta || {}
# this.warnings = options.warnings || []
# this.errors = options.errors || []

# File.prototype = {
#   clone: function (changes) {
#     return new File({
#       info: changes && changes.info !== undefined ? changes.info : this.info,
#       content: changes && changes.content !== undefined ? changes.content : this.content,
#       meta: changes && changes.meta !== undefined ? merge.recursive({}, this.meta, changes.meta) : this.meta,
#       warnings: changes && changes.warnings !== undefined ? changes.warnings.slice() : this.warnings.slice(),
#       errors: changes && changes.errors !== undefined ? changes.errors.slice() : this.errors.slice()
#     })
#   },
#   warning: function (warning) {
#     this.warnings.push(warning)
#   },
#   error: function (errors) {
#     this.errors.push(errors)
#   }
# }

@define fileProperties
  @property info [FileInfo]
    @description
      Contains the source and destination filenames for this file.

  @property content [Any]
    @description
      Contains the contents of the file - this depends on the type of the file.
      So this could be a string, or could be quantum AST, or could be virtual dom.
      It depends on which bit of the pipeline you are in.

  @property meta [Object]
    @description
      An object that can contain extra information that a file transform wants
      to export. For example, the version transform adds the current `version` to
      this object after processing the file - so that other transforms can make
      use of that information.

  @property warnings [Array[Object]]
    @description

  @property errors [Array[Object]]
    @description

@prototype File
  @added
    @description
      An object which represents a html page, css file or javascript file (or
      any other type of file that a transform decides to export)

  @description
    An object which represents a html page, css file or javascript file (or
    any other file type that a transform decides to export)

  @fileProperties

  @method clone
    @description
      Creates a new @type[File] instance with some or all of the properties changed.

    @param? changes [Object]
      @description
        Provide any properties to override
      @fileProperties

    @returns File
      @description
        A new @type[File] instance with the specified properties changed.

  @method warning
    @returns File
      @description
        This @type[File] instance

  @method error
    @returns File
      @description
        This @type[File] instance
