@version 2.0.0
  @api quantum-code-highlight
    @group Api
      @function transforms
        @description
          The function for adding the transforms to the quantum pipeline

          Example:

          @bold: script.js
          @codeblock js
            const codeHighlight = require('quantum-code-highlight')
            const html = require('quantum-html')
            const quantum = require('quantum-js')

            const htmlTransforms = {
              highlight: codeHighlight.transforms(),
            }

            quantum.read('file.um')
              .map(html({ transforms: htmlTransforms }))
              .map(html.stringify())

          @bold: file.um
          @@codeblock um
            @h1: Heading

            @p: Page content here

            @codeblock js
              var a = true;

          @bold: Result
          @codeblock html
            <!DOCTYPE html>
            <html>
              <head>
                <meta name="viewport" content="width=device-width, initial-scale=1"></meta>
                <style>
                  /* page and highlight styles */
                </style>
              </head>
              <body>
                <h1>Heading</h1>
                <p>Page content here</p>
                <div class="quantum-code-highlight-codeblock language-js"><pre><span class="hljs-keyword">var</span> a = <span class="hljs-literal">true</span>;</pre></div>
              </body>
            </html>

    @group Entities
      @object @code
        @params language: The language to use for code highlighting
        @description
          Creates an inline code section with highlighting

          Example Code:

          @@codeblock um
            # Syntax Guessing
            @code[some.code = 3]

            # Set the syntax to javascript
            @code(js)[var a = true]

            # Create a code section with no highlighting
            @code(nohighlight)[some code without highlighting]

          Example Result:

          @code[some.code = 3]

          @code(js)[var a = true]

          # @code(nohighlight)[some code without highlighting]


      @object @codeblock
        @params language: The language to use for code highlighting
        @description
          Creates an inline code section with highlighting

          Example Code:

          @@codeblock um
            # Syntax Guessing
            @codeblock
              some.code = 3

            # Set the syntax to javascript
            @codeblock js
              var a = true

            # Create a code section with no highlighting
            @codeblock nohighlight
              some code without highlighting

          Example Result:

          @codeblock
            some.code = 3

          @codeblock js
            var a = true

          # @codeblock nohighlight
          #   some code without highlighting

