@stylesheet hexagon.css
@script hexagon.js
@stylesheet //maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css

@style: @inline index.css

@define transform-func
  @property {{ps}} [Function]: Transforms a {{ps}} entity to virtual dom
    @param entity [Object]: An entity with type, params and content properties
    @param page [Object]: The page the virtual dom is being constructed in
    @param transforms [Object]: The object containing the transforms available

#@classed hx-titlebar hx-info true
@hxd.titlebar
  @title Quantum.js
  @subtitle quantum-api

@div .hx-content

  @h1: About
  @p: Quantum HTML transforms for api docs. Currently geared towards writing docs for javascript like languages.

  @h1: Installation

  @codeblock
    npm install quantum-api

  @h1: Example
  @codeblock js
    var quantum = require('quantum-core')
    var html    = require('quantum-html')
    var api     = require('quantum-api')

    var htmlTransforms = {
      html: html.transforms,
      api: api()
    }

    quantum.read('source.um')
      .map(html(htmlTransforms))
      .map(html.stringify())
      .map(quantum.write('target'))


  @h1: Api
  @api
    @function api
      @description: Transforms api docs entites to virtual dom.
      @param? options [Object]
        @property? types [Object]
          @description
            @p: An object with links to documentation for types.

            @p: Example
            @codeblock js
              {
                'String': 'https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String',
                'Number': 'https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number',
                'Boolean': 'https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean',
                'Node': 'https://developer.mozilla.org/en/docs/Web/API/Node',
                'Element': 'https://developer.mozilla.org/en/docs/Web/API/Element',
                'HTMLElement': 'https://developer.mozilla.org/en/docs/Web/API/HTMLElement',
                'SVGElement': 'https://developer.mozilla.org/en/docs/Web/API/SVGElement',
                'Date': 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date'
              }

      @returns Object
        @description: The html transform that convert entites to virtual dom
        @transform-func api
        @transform-func prototype
        @transform-func object
        @transform-func method
        @transform-func function
        @transform-func param
        @transform-func param?
        @transform-func property
        @transform-func property?
        @transform-func returns
