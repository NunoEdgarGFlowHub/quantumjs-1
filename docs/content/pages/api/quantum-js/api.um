@api
  @function parse
    @param input [String]
      @description:
        @p: A string containing markup to parse. Ie something that looks like this:
        @codeblock um
          @inline ../the-markup.um [text]

    @returns Object
      @description
        @p: The parsed ast. Looks something like this:
        @codeblock json
          @inline ../the-markup.json [text]

  @function read
    @param glob [String]: A filename or glob string which matches files to load.
    @param? options [Object]
      @property inlineEntityType [String]
        @description: The entity type to use for inlining other files. The default is "inline".
        @default inline
      @property inline [Boolean]
        @description: When inline mode is on, the inlineEntityType (@code(um)[@inline] by default) will be replaced with the content of the specified files.
        @default true
      @property loader [Function]
        @description: A function for loading a file as a string.
        @param filename [String]: The file/resource to load.
        @returns [Promise[String]]: A promise that yields the parsed object.
      @property base [String]
        @description: The base of the glob path that should be ignored when writing to the target.
    @returns [Promise[Object]]
      @description
        @p: A promise that yields the parsed ast wrapped in an object that looks like this:
        @codeblock js
          {
            filename: 'path/to/source.um',
            content: '<ast>'
          }

  @function write
    @description: Creates a function that can write {filename, content} objects to disk.
    @param targetDir [String]: The directory to write to.
    @returns Function
      @description: A function that can write {filename, content} objects to disk.
      @param object [Object]
        @property filename [String]
          @description: The filename to write to (relative to the output directory)
        @property content [String]
          @description: The content to write to the file.
      @returns [Promise]
        @description: A promise that resolves when the file has been written, or rejects if there is an error.

  @function select
    @description: A helper api for extracting values from parsed ast. Pass in parsed ast, and use the methods on Selection to make working with the ast easier.
    @param entity [Object]
      @description: An entity object to select.
    @returns Selection

  @function create
    @description: Creates a new entity builder with the type given.
    @param type [String]
    @returns Builder


  @prototype Selection
    @description: For extracting values from parsed ast.

    @method clone
    @method cs
    @method empty
    @method entityContent
    @method filter
    @method has
    @method hasContent
    @method json
    @method nonEmpty
    @method param
    @method ps
    @method replaceContent
    @method replaceParams
    @method select
    @method selectAll
    @method textContent
    @method transform

  @prototype Builder
    @description
      For building up ast programmatically.

      @codeblock js
        var entity = quantum.create('ice-cream')
          .add(quantum.create('description').add('Ice cream of the week'))
          .add(quantum.create('flavor').ps('choc chip'))
          .add(quantum.create('flavor').ps('mint'))
          .add(quantum.create('flavor').ps('vanilla'))
          .build()

    @prototype parameters
      @description: Sets the param property of the entity using an array of strings.
      @param params [Array[String]]: The value to set the param property to.
      @returns Builder: This Builder

    @method ps
      @description: Sets the param property of the entity using a space delimited string.
      @param params [String]: The value to set the param property to - the string will be split on spaces.
      @returns Builder: This Builder

    @method add
      @description: Adds some text content to this entity.
      @param text [String]: The text content to add.
      @returns Builder: This Builder

    @method add
      @description: Adds an entity object to the content of this entity.
      @param entity [Object]: The entity to add.
      @returns Builder: This Builder

    @method add
      @description: Adds a builder to the content of the entity - it will be built automatically when the build method is called.
      @param builder [Builder]: The builder to add.
      @returns Builder: This Builder

    @method build
      @description: Builds the entity as a plain object.
      @returns Object
        @description: The built entity object
